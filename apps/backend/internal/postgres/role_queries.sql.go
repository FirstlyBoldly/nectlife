// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: role_queries.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createRole = `-- name: CreateRole :one
INSERT INTO "role" (
  "key_name",
  "description"
) VALUES (
  $1, $2
) RETURNING id, key_name, description
`

type CreateRoleParams struct {
	KeyName     string
	Description pgtype.Text
}

func (q *Queries) CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error) {
	row := q.db.QueryRow(ctx, createRole, arg.KeyName, arg.Description)
	var i Role
	err := row.Scan(&i.ID, &i.KeyName, &i.Description)
	return i, err
}

const flushRoles = `-- name: FlushRoles :exec
DELETE FROM "role" CASCADE
`

func (q *Queries) FlushRoles(ctx context.Context) error {
	_, err := q.db.Exec(ctx, flushRoles)
	return err
}
