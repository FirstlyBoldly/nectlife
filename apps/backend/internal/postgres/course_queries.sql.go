// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: course_queries.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createCourse = `-- name: CreateCourse :one
INSERT INTO "course" (
  "department_id",
  "key_name"
) VALUES (
  $1, $2
) RETURNING id, department_id, key_name
`

type CreateCourseParams struct {
	DepartmentID pgtype.Int4
	KeyName      string
}

func (q *Queries) CreateCourse(ctx context.Context, arg CreateCourseParams) (Course, error) {
	row := q.db.QueryRow(ctx, createCourse, arg.DepartmentID, arg.KeyName)
	var i Course
	err := row.Scan(&i.ID, &i.DepartmentID, &i.KeyName)
	return i, err
}

const flushCourses = `-- name: FlushCourses :exec
DELETE FROM "course" CASCADE
`

func (q *Queries) FlushCourses(ctx context.Context) error {
	_, err := q.db.Exec(ctx, flushCourses)
	return err
}
