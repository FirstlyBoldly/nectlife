// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserParams = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    CourseID: number;
    Email: string;
    FirstName: string;
    LastName: string;
    PasswordHash: string;
    RoleID: number;
    StudentID: string;
};

export type ErrorDetail = {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string;
    /**
     * Error message text
     */
    message?: string;
    /**
     * The value at the given location
     */
    value?: unknown;
};

export type ErrorModel = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail>;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type LoginInputBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * User password
     */
    password: string;
    /**
     * User student ID
     */
    student_id: string;
};

export type LoginOutputBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    ID: number;
};

export type RegisterInputBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * User course ID
     */
    course_id: string;
    /**
     * User email address
     */
    email: string;
    /**
     * User first name
     */
    first_name: string;
    /**
     * User last name
     */
    last_name: string;
    /**
     * User password
     */
    password: string;
    /**
     * User role ID
     */
    role_id: string;
    /**
     * User student ID
     */
    student_id: string;
};

export type StatusOutputBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    Authenticated: boolean;
    UserID: number;
};

export type Text = {
    String: string;
    Valid: boolean;
};

export type Timestamptz = {
    InfinityModifier: number;
    Time: string;
    Valid: boolean;
};

export type UpdateUserParams = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    CourseID: number;
    Description: Text;
    DisplayName: Text;
    Email: string;
    FirstName: string;
    Headline: Text;
    ID: number;
    LastName: string;
    MiddleName: Text;
    PasswordHash: string;
    RoleID: number;
    Status: string;
    StudentID: string;
};

export type User = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    CourseID: number;
    CreatedAt: Timestamptz;
    DeletedAt: Timestamptz;
    Description: Text;
    DisplayName: Text;
    Email: string;
    FirstName: string;
    Headline: Text;
    ID: number;
    LastName: string;
    MiddleName: Text;
    PasswordHash: string;
    RoleID: number;
    Status: string;
    StudentID: string;
};

export type CreateUserParamsWritable = {
    CourseID: number;
    Email: string;
    FirstName: string;
    LastName: string;
    PasswordHash: string;
    RoleID: number;
    StudentID: string;
};

export type ErrorModelWritable = {
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail>;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type LoginInputBodyWritable = {
    /**
     * User password
     */
    password: string;
    /**
     * User student ID
     */
    student_id: string;
};

export type LoginOutputBodyWritable = {
    ID: number;
};

export type RegisterInputBodyWritable = {
    /**
     * User course ID
     */
    course_id: string;
    /**
     * User email address
     */
    email: string;
    /**
     * User first name
     */
    first_name: string;
    /**
     * User last name
     */
    last_name: string;
    /**
     * User password
     */
    password: string;
    /**
     * User role ID
     */
    role_id: string;
    /**
     * User student ID
     */
    student_id: string;
};

export type StatusOutputBodyWritable = {
    Authenticated: boolean;
    UserID: number;
};

export type UpdateUserParamsWritable = {
    CourseID: number;
    Description: Text;
    DisplayName: Text;
    Email: string;
    FirstName: string;
    Headline: Text;
    ID: number;
    LastName: string;
    MiddleName: Text;
    PasswordHash: string;
    RoleID: number;
    Status: string;
    StudentID: string;
};

export type UserWritable = {
    CourseID: number;
    CreatedAt: Timestamptz;
    DeletedAt: Timestamptz;
    Description: Text;
    DisplayName: Text;
    Email: string;
    FirstName: string;
    Headline: Text;
    ID: number;
    LastName: string;
    MiddleName: Text;
    PasswordHash: string;
    RoleID: number;
    Status: string;
    StudentID: string;
};

export type LoginData = {
    body: LoginInputBodyWritable;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type LoginError = LoginErrors[keyof LoginErrors];

export type LoginResponses = {
    /**
     * OK
     */
    200: LoginOutputBody;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/logout';
};

export type LogoutErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type LogoutError = LogoutErrors[keyof LogoutErrors];

export type LogoutResponses = {
    /**
     * No Content
     */
    204: void;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type RegisterData = {
    body: RegisterInputBodyWritable;
    path?: never;
    query?: never;
    url: '/api/v1/auth/register';
};

export type RegisterErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type RegisterError = RegisterErrors[keyof RegisterErrors];

export type RegisterResponses = {
    /**
     * Created
     */
    201: unknown;
};

export type StatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/status';
};

export type StatusErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type StatusError = StatusErrors[keyof StatusErrors];

export type StatusResponses = {
    /**
     * OK
     */
    200: StatusOutputBody;
};

export type StatusResponse = StatusResponses[keyof StatusResponses];

export type ListUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type ListUsersErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type ListUsersError = ListUsersErrors[keyof ListUsersErrors];

export type ListUsersResponses = {
    /**
     * OK
     */
    200: Array<User>;
};

export type ListUsersResponse = ListUsersResponses[keyof ListUsersResponses];

export type CreateUserData = {
    body: CreateUserParamsWritable;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type CreateUserErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
    /**
     * Created
     */
    201: User;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type DeleteUserData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/users/{id}';
};

export type DeleteUserErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type DeleteUserError = DeleteUserErrors[keyof DeleteUserErrors];

export type DeleteUserResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteUserResponse = DeleteUserResponses[keyof DeleteUserResponses];

export type GetUserByIdData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/users/{id}';
};

export type GetUserByIdErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type GetUserByIdError = GetUserByIdErrors[keyof GetUserByIdErrors];

export type GetUserByIdResponses = {
    /**
     * OK
     */
    200: User;
};

export type GetUserByIdResponse = GetUserByIdResponses[keyof GetUserByIdResponses];

export type UpdateUserData = {
    body: UpdateUserParamsWritable;
    path: {
        /**
         * User ID to update
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/users/{id}';
};

export type UpdateUserErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type UpdateUserError = UpdateUserErrors[keyof UpdateUserErrors];

export type UpdateUserResponses = {
    /**
     * No Content
     */
    204: void;
};

export type UpdateUserResponse = UpdateUserResponses[keyof UpdateUserResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};
